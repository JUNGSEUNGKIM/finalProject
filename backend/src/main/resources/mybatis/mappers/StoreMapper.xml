<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.finalproject.repository.mybatis.StoreMapper">
    <resultMap id="storeMainResultMap" type="com.example.finalproject.domain.store.StoreMain">
        <result property="boarder_code" column="shopid" />
        <result property="imagepath" column="imagepath" />
        <result property="title" column="tourtitle" />
        <result property="content" column="content"  />
        <result property="tourprice" column="tourprice" />
        <result property="location" column="location" />
        <result property="image_name" column="imagename" />
        <result property="comments_count" column="comments_count" />
    </resultMap>

    <resultMap id="storeResultMap" type="com.example.finalproject.domain.store.StoreMain">
        <result property="boarder_code" column="shopid" />
        <result property="imagepath" column="imagepath" />
        <result property="title" column="tourtitle" />
        <result property="content" column="content"  />
        <result property="tourprice" column="tourprice" />
        <result property="location" column="location" />
        <result property="image_name" column="imagename" />
    </resultMap>

    <resultMap id="commentResultMap" type="com.example.finalproject.domain.store.StoreComment">
        <result property="comment_id" column="REVIEWID" />
        <result property="boarder_code" column="SHOPID" />
        <result property="content" column="REVIEW" />
        <result property="user_id" column="author" />
        <result property="create_at" column="create_at"  />
        <result property="parent_comment_id" column="parent_comment_id" />
        <result property="starrating" column="STARRATING"  />
        <result property="id" column="id" />
    </resultMap>

    <select id="storemain"  resultMap="storeMainResultMap">
        <![CDATA[ SELECT
            SHOPID, TOURTITLE, LOCATION, TOURPRICE,  content,IMAGENAME,
            (SELECT COUNT(*) FROM TOURSHOPREVIEW c WHERE c.SHOPID = b.SHOPID) AS comments_count
        FROM(
                SELECT
                    b.SHOPID, b.TOURTITLE ,  b.LOCATION, b.TOURPRICE, b.content,b.IMAGENAME,
                    ROW_NUMBER() OVER (]]>
        <if test="startRow != -1">
            <![CDATA[ ORDER BY b.LOCATION DESC]]>
        </if>
        <if test="startRow == -1">
            <![CDATA[ ORDER BY b.LOCATION DESC]]>
        </if>
        <![CDATA[ ) AS rn
                FROM tourshop b

                WHERE 1=1) b
        WHERE rn BETWEEN #{startRow} AND #{endRow}]]>
    </select>

    <select id="totalPage" >
        select count(*) from tourshop
    </select>

    <select id="detailStore" parameterType="String" resultMap="storeResultMap">
        SELECT b.SHOPID, b.TOURTITLE, b.content,
               b.TOURPRICE, b.LOCATION, b.IMAGEPATH, b.IMAGENAME
        FROM tourshop b
        WHERE b.SHOPID = #{id}
    </select>

    <select id="detailStoreComment" parameterType="String" resultMap="commentResultMap">
        SELECT c.REVIEWID, c.SHOPID, c.REVIEW, c.USERID as id, u.nickname as author, TO_CHAR(c.created_at, 'YYYY-MM-DD HH:MM') AS create_at, c.parent_comment_id
        FROM tourshopreview c
                 JOIN users u ON c.USERID = u.id
        WHERE c.SHOPID = #{id}
        ORDER BY c.REVIEWID
    </select>

    <select id="getSequence" resultType="String">
        SELECT BOARDER_CODE_SEQ.NEXTVAL FROM DUAL
    </select>


    <insert id="createBoard" parameterType="com.example.finalproject.domain.board.Board" useGeneratedKeys="true" keyProperty="boarder_code" >
        INSERT INTO BOARDER (boarder_code, user_id, title, content, image_path,
                             image_name,festival_code  )
        VALUES(#{boarder_code}, #{user_id}, #{title}, #{content}, #{image_path},
               #{image_name}, #{festival_code})
    </insert>

    <update id="editBoard" parameterType="com.example.finalproject.domain.board.Board" >
        UPDATE boarder SET title = #{title}, content = #{content} WHERE boarder_code = #{boarder_code}
    </update>

    <insert id="addComment" parameterType="com.example.finalproject.domain.board.Comment">
        INSERT INTO BOARDER_COMMENTS (comment_id, boarder_code, user_id, content, parent_comment_id)
        VALUES (comment_id_seq.nextval, #{boarder_code}, #{user_id}, #{content}, #{parent_comment_id})
    </insert>

    <update id="editComment" parameterType="com.example.finalproject.domain.board.Comment">
        UPDATE BOARDER_COMMENTS SET content = #{content} WHERE comment_id = #{comment_id}
    </update>

    <delete id="deleteComment" parameterType="String">
        DELETE FROM boarder_comments WHERE comment_id = #{comment_id} OR parent_comment_id = #{comment_id}
    </delete>

    <delete id="deleteBoardComment" parameterType="String">
        DELETE FROM boarder_comments WHERE boarder_code = #{id}
    </delete>

    <delete id="deleteBoard" parameterType="String">
        DELETE FROM boarder WHERE boarder_code = #{id}
    </delete>

</mapper>